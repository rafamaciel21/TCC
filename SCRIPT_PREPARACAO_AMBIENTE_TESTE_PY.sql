
---------------------------
-- create de tabelas
---------------------------
-- PRODUTO

CREATE TABLE "DBA"."PRODUTO"  (
		  "IDPRODUTO" INTEGER NOT NULL , 
		  "DESCRCOMPRODUTO" VARCHAR(60) NOT NULL
		  )   

-- grade
		  

CREATE TABLE "DBA     "."PRODUTO_GRADE"  (
		  "IDPRODUTO" INTEGER NOT NULL , 
		  "IDSUBPRODUTO" INTEGER NOT NULL , 
		  "SUBDESCRICAO" VARCHAR(100) , 
		  "IDSUBPRODUTOEXTERNO" INTEGER 
		  "IDCODBARPROD" DECIMAL(14,0) , 
		  "DESCRRESPRODUTO" VARCHAR(40) 
		 )   

		  
-- tabela de estoque 
CREATE TABLE "DBA     "."ESTOQUE_BALANCO"  (
		  "IDLOCALESTOQUE" INTEGER NOT NULL , 
		  "IDEMPRESA" INTEGER NOT NULL , 
		  "IDPLANILHA" INTEGER NOT NULL , 
		  "NUMSEQUENCIA" INTEGER NOT NULL , 
		  "IDPRODUTO" INTEGER NOT NULL , 
		  "IDSUBPRODUTO" INTEGER NOT NULL , 
		  "IDLOTE" VARCHAR(30) , 
		  "FLAGPROCESSADO" CHAR(1) NOT NULL WITH DEFAULT 'F' , 
		  "DTBALANCO" DATE NOT NULL , 
		  "QTDCONTADA" DECIMAL(12,3) WITH DEFAULT 0 , 
		  "CUSTOUNITARIO" DECIMAL(15,6) WITH DEFAULT 0 , 
		  "AREA" CHAR(1) , 
		  "VAO" DECIMAL(2,0) , 
		  "DESCRBALANCO" VARCHAR(300) , 
		  "IDCTDBALANCO" INTEGER , 
		  "IDUSUARIO" INTEGER , 
		  "TIPOBALANCO" CHAR(1) , 
		  "OBSERVACAO" VARCHAR(200) , 
		  "IDMOTIVO" INTEGER )  

--N TABELA EMPRESA
CREATE TABLE "DBA     "."EMPRESA"  (
		  "IDEMPRESA" INTEGER NOT NULL )

GO
--TABELA LOCAL ESTOQUE
CREATE TABLE "DBA     "."ESTOQUE_CADASTRO_LOCAL"  (
		  "IDLOCALESTOQUE" INTEGER NOT NULL , 
		  "IDEMPRESABAIXAEST" INTEGER )

-- TABELA CUSTO		  
CREATE TABLE "DBA     "."POLITICA_PRECO_PRODUTO"  (
		  "IDPRODUTO" INTEGER NOT NULL , 
		  "IDSUBPRODUTO" INTEGER NOT NULL , 
		  "IDEMPRESA" INTEGER NOT NULL , 
		  "VALCUSTOREPOS" DECIMAL(15,6) WITH DEFAULT 0 , 
		  "CUSTOGERENCIAL" DECIMAL(15,7) WITH DEFAULT 0 , 
		  "CUSTONOTAFISCAL" DECIMAL(18,7) WITH DEFAULT 0 , 
		  "CUSTOULTIMACOMPRA" DECIMAL(31,7) WITH DEFAULT 0)
		  
-- função que gera o idplanilha 		  
CREATE FUNCTION uf_get_idplanilha()  RETURNS INTEGER  BEGIN ATOMIC     DECLARE
li_idplanilha INTEGER;     SET li_idplanilha = NEXT VALUE FOR SEQ_IDPLANILHA;
 RETURN li_idplanilha;  END  
		  
-----------------------------------------------
-- INSERT DE PRODUTOS GENERICOS 
-----------------------------------------------
INSERT INTO DBA.PRODUTO(IDPRODUTO,DESCRCOMPRODUTO,
 )
WITH NUMEROS (N) AS (
  SELECT 1 FROM SYSIBM.SYSDUMMY1
  UNION ALL
  SELECT N + 1 FROM NUMEROS
  WHERE N < 1000
)
SELECT 
  N AS IDPRODUTO,
  'PRODUTO GENERICO' AS DESCRCOMPRODUTO
FROM NUMEROS

go
INSERT INTO DBA.PRODUTO_GRADE (
	DESCRRESPRODUTO, 
	IDCODBARPROD,
	IDPRODUTO, 
	IDSUBPRODUTO,
	SUBDESCRICAO)
SELECT 
	'PRODUTO_GENERICO' AS DESCRRESPRODUTO,
	IDPRODUTO + 222222222   IDCODBARPROD,
	P.IDPRODUTO AS IDPRODUTO,
	P.IDPRODUTO AS IDSUBPRODUTO,
	'' SUBDESCRICAO
FROM 
	DBA.PRODUTO P
WHERE 
	NOT EXISTS (SELECT 1 FROM DBA.PRODUTO_GRADE B WHERE B.IDPRODUTO = P.IDPRODUTO)
GO
COMMIT
GO

-------------------------------------
-- LIMPA AMBIENTE 
-------------------------------------

DELETE FROM DBA.ESTOQUE_BALANCO 
GO



CREATE TABLE CONV.TESTE
(
  Step_Timestamp			TIMESTAMP DEFAULT CURRENT TIMESTAMP
, Step_Name 				VARCHAR(100)

, Condicao 					VARCHAR(100)
, Codigo_Produto 			VARCHAR(100)
, Codigo_Produto_Derivado 	VARCHAR(100)
, Codigo_Produto_Externo 	VARCHAR(100)
, Codigo_Barras 			VARCHAR(100)
, Descricao 				VARCHAR(100)
, Data_Balanco 				VARCHAR(100)
, Empresa 					VARCHAR(100)
, Local_Estoque 			VARCHAR(100)
, Lote 						VARCHAR(100)
, Quantidade 				VARCHAR(100)
, Custo_Unitario 			VARCHAR(100)

, IDEMPRESA 				VARCHAR(100)
, IDLOCALESTOQUE 			VARCHAR(100)
, Quantidade_Tmp 			VARCHAR(100)
, Custo_Unitario_Tmp 		VARCHAR(100)
, Data_Balanco_Tmp			VARCHAR(100)
, Quantidade_Novo 			VARCHAR(100)
, Custo_Unitario_Novo 		VARCHAR(100)
, Data_Balanco_Valid 		VARCHAR(100)
, Codigo_Barras_Tmp 		VARCHAR(100)
, IDPRODUTO_Tmp 			VARCHAR(100)
, IDSUBPRODUTO_Tmp			VARCHAR(100)
, IDPRODUTO 				VARCHAR(100)		
, IDSUBPRODUTO 				VARCHAR(100)
, Observacao 				VARCHAR(100)
, IDLOTE 					VARCHAR(100)
, FLAGLOTE 					VARCHAR(100)
, DTBALANCO 				VARCHAR(100)
, IDPLANILHA 				VARCHAR(100)
, NUMSEQUENCIA 				VARCHAR(100)

, Status					VARCHAR(100)
, Error_Description 		VARCHAR(500)
)

COMMIT
